<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <connectionStrings>
    <add name="DefaultConnection" connectionString="server=devutilsdb.cdnzizlzg8ym.eu-central-1.rds.amazonaws.com;User Id=admin;password=rce6zvcMwMe85lEcCxz5;database=tavhasagol_qa"
         xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
  </connectionStrings>

  <!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an attribute "name" that has a value of "MyDB".
    
    <connectionStrings>
      <add name="MyDB" 
        connectionString="Data Source=ReleaseSQLServer;Initial Catalog=MyReleaseDB;Integrated Security=True" 
        xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
       "/>
    </connectionStrings>
  -->

  <StorageTranasactionManagers default="ReceiptDataManager">
    <providers>
      <add name="UpdateLogs" type="AM.Storage.StorageManager.FileStorageTransactionManager,AM.Storage" enlistmentFactory="AmazonS3StorageEnlistmentFactoryLogs" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
      <add name="ZipVersion" type="AM.Storage.StorageManager.FileStorageTransactionManager,AM.Storage" enlistmentFactory="AmazonS3StorageEnlistmentFactoryZip" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
      <add name="ReceiptsParsed" type="AM.Storage.StorageManager.FileStorageTransactionManager,AM.Storage" enlistmentFactory="AmazonS3StorageEnlistmentFactoryPR"  xdt:Transform="SetAttributes" xdt:Locator="Match(name)" />
      <add name="ReceiptsBinary" type="AM.Storage.StorageManager.FileStorageTransactionManager,AM.Storage" enlistmentFactory="AmazonS3StorageEnlistmentFactoryOR"  xdt:Transform="SetAttributes" xdt:Locator="Match(name)" />
      <add name="ReceiptsPdf" type="AM.Storage.StorageManager.FileStorageTransactionManager,AM.Storage" enlistmentFactory="AmazonS3StorageEnlistmentFactoryPdfR"  xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
      <add name="Images" type="AM.Storage.StorageManager.FileStorageTransactionManager,AM.Storage" enlistmentFactory="AmazonS3StorageEnlistmentFactoryImg" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    </providers>
  </StorageTranasactionManagers>

  <EnlistmentFactories default="DateStorageDataEnlistmentFactory">
    <factories>
      <add name="AmazonS3StorageEnlistmentFactoryLogs" type="AM.Storage.S3.AmazonS3StorageEnlistmentFactory,AM.Storage.S3" bucketRegion="eu-central-1" bucketName="brandcustdev" subDirectoryInBucket="UpdateLogs" />
      <add name="AmazonS3StorageEnlistmentFactoryZip" type="AM.Storage.S3.AmazonS3StorageEnlistmentFactory,AM.Storage.S3" bucketRegion="eu-central-1" bucketName="brandcustdev" subDirectoryInBucket="ZipVersion" />
      <add name="AmazonS3StorageEnlistmentFactoryPR" type="AM.Storage.S3.AmazonS3StorageEnlistmentFactory,AM.Storage.S3" bucketRegion="eu-central-1" bucketName="brandcustdev" subDirectoryInBucket="ParsedReceipts" />
      <add name="AmazonS3StorageEnlistmentFactoryOR" type="AM.Storage.S3.AmazonS3StorageEnlistmentFactory,AM.Storage.S3" bucketRegion="eu-central-1" bucketName="brandcustdev" subDirectoryInBucket="OriginalReceipts" />
      <add name="AmazonS3StorageEnlistmentFactoryPdfR" type="AM.Storage.S3.AmazonS3StorageEnlistmentFactory,AM.Storage.S3" bucketRegion="eu-central-1" bucketName="brandcustdev" subDirectoryInBucket="PdfReceipts" />
      <add name="AmazonS3StorageEnlistmentFactoryImg" type="AM.Storage.S3.AmazonS3StorageEnlistmentFactory,AM.Storage.S3" bucketRegion="eu-central-1" bucketName="brandcustdev" subDirectoryInBucket="Images" />
    </factories>
  </EnlistmentFactories>

  <appSettings>
    <add key="UseCorsAllowAll" value="False" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="AllowInsecureHttp" value="True" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

    <add key="TavHaSagolEnterUrl" value="https://tavhasagol.co.il/enter" xdt:Locator="Match(key)"/>

  </appSettings>

  <system.web>
    <compilation xdt:Transform="RemoveAttributes(debug)" />
    <machineKey validationKey="53CBC13EEA79452313C657D92FBBC78F52693886A9BB6D890600EC374F4B390082A7E72F23CA8F0958F29EF87D585C0868CD08C5FFA810313B27B8986654C087" decryptionKey="54543A3B9D028968BC43FBFD7BC026F4A9510109A5600F93" validation="SHA1" decryption="AES"/>
  </system.web>

  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" autoReload="true" throwExceptions="false" internalLogLevel="Off">
    <variable name="logdir" value="C:\inetpub\wwwroot\QaTavHaSagol.Brandcust\Files\Logs" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    <variable name="appName" value="BrandCust.Web" />
    <targets>
      <target name="file" xsi:type="File" layout="${longdate} - ${level:uppercase=true}: ThreadId:${threadid} ${message}${onexception:${newline}EXCEPTION\: ${exception:format=ToString}}" fileName="${logdir}/${appName}/Debug.txt" archiveFileName="${logdir}/${appName}/Archive/Debug_${shortdate}.{##}.txt" archiveNumbering="Sequence" archiveEvery="Day" maxArchiveFiles="30" keepFileOpen="false" encoding="iso-8859-2" />
    </targets>
    <rules>
      <logger name="*" minlevel="Debug" writeTo="file" />
    </rules>
  </nlog>
</configuration>